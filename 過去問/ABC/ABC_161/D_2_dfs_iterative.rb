# 再帰関数を使わずに全列挙(DFS)
K = gets.to_i

def iterative_dfs(all)
  stack = [*1..9].reverse          # [9, 8, 7, 6, 5, 4, 3, 2, 1]
  until stack.empty?
    val = stack.pop                # val=1 ,stack = [9,8,7,6,5,4,3,2] # val=10,stack=[9,8,7,6,5,4,3,2,12,11]
    all << val                     # all=[1]                          # all=[1,10]
    if val<10**10                  # 10桁まで探索
      (-1..1).reverse_each do |i|  # 1,0,-1
        add = (val % 10) + i       # val=1->add=2,1,0                 # val=10->1,0,-1
        stack << val*10 + add if add >= 0 && add <= 9 # stack=[9,8,7,6,5,4,3,2,12,11,10]  # stack=[9,8,7,6,5,4,3,2,12,11,101,100]
      end
    end
  end
end

all = []
iterative_dfs(all)
puts all.sort[K-1]




all = [1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000,
  1_000_000_000, 1_000_000_001, 100000001, 1000000010, 1000000011, 1000000012,
  10000001, 100000010, 1000000100, 1000000101, 100000011, 1000000110,
  1000000111, 1000000112, 100000012, 1000000121, 1000000122, 1000000123,
  1000001, 10000010, 100000100, 1000001000, 1000001001, 100000101,
  1000001010, 1000001011, 1000001012, 10000011, 100000110, 1000001100,
  1000001101, 100000111, 1000001110, 1000001111, 1000001112, 100000112,
  1000001121, 1000001122, 1000001123, 10000012, 100000121, 1000001210,
  1000001211, 1000001212, 100000122, 1000001221, 1000001222, 1000001223,
  100000123, 1000001232, 1000001233, 1000001234, 100001, 1000010, 10000100,
  100001000, 1000010000, 1000010001, 100001001, 1000010010, 1000010011,
  1000010012, 10000101, 100001010, 1000010100, 1000010101, 100001011,
  1000010110, 1000010111, 1000010112, 100001012, 1000010121, 1000010122,
  1000010123, 1000011, 10000110, 100001100, 1000011000, 1000011001,
  100001101, 1000011010, 1000011011, 1000011012, 10000111, 100001110,
  1000011100, 1000011101, 100001111, 1000011110, 1000011111, 1000011112,
  100001112]
